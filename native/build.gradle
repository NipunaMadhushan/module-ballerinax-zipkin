/*
 * Copyright (c) 2023, WSO2 LLC. (https://www.wso2.com) All Rights Reserved.
 *
 * WSO2 LLC. licenses this file to you under the Apache License,
 * Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied. See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

plugins {
    id 'java-library'
}

description = 'Ballerina - Zipkin Extension - Native Module'

dependencies {
    implementation "org.slf4j:slf4j-jdk14:${slf4jVersion}"
    implementation "io.zipkin.zipkin2:zipkin:${zipkinVersion}"
    implementation "io.zipkin.reporter2:zipkin-reporter:${zipkinReporterVersion}"
    implementation "io.zipkin.reporter2:zipkin-sender-okhttp3:${zipkinReporterVersion}"
    implementation "com.squareup.okio:okio:${okioVersion}"
    implementation "com.squareup.okhttp3:okhttp:${okhttpVersion}"
    implementation "org.jetbrains.kotlin:kotlin-runtime:${kotlinVersion}"
    implementation "org.jetbrains.kotlin:kotlin-stdlib:${kotlinStdlibVersion}"
    implementation "io.opentelemetry:opentelemetry-exporter-zipkin:${openTelemetryVersion}"
    implementation "org.ballerinalang:ballerina-runtime:${ballerinaLangVersion}"
    implementation "io.opentelemetry:opentelemetry-api:${openTelemetryVersion}"
    implementation "io.opentelemetry:opentelemetry-api-metrics:${openTelemetryAlphaVersion}"
    implementation "io.opentelemetry:opentelemetry-context:${openTelemetryVersion}"
    implementation "io.opentelemetry:opentelemetry-sdk-trace:${openTelemetryVersion}"
    implementation "io.opentelemetry:opentelemetry-sdk-common:${openTelemetryVersion}"
    implementation "io.opentelemetry:opentelemetry-semconv:${openTelemetryAlphaVersion}"
    implementation "io.opentelemetry:opentelemetry-exporter-otlp-trace:${openTelemetryVersion}"
    implementation "io.opentelemetry:opentelemetry-extension-trace-propagators:${openTelemetryVersion}"
    implementation("com.google.guava:guava:${guavaVersion}") {
        exclude group: 'com.google.code.findbugs', module: 'jsr305'
    }
    implementation("com.google.guava:failureaccess:${failureAccessVersion}")
}

compileJava {
    doFirst {
        options.compilerArgs = [
                '--module-path', classpath.asPath,
        ]
        classpath = files()
    }
}

jar {
    manifest {
        attributes('Implementation-Title': project.name, 'Implementation-Version': project.version)
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId project.group
            artifactId "zipkin-extension-native"
            version = project.version
            artifact jar
        }
    }

    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/${System.getenv("packagePublishRepo")}")
            credentials {
                username = System.getenv("packageUser")
                password = System.getenv("packagePAT")
            }
        }
    }
}

task copyJavaClassFiles(type: Copy) {
    dependsOn(compileJava)
    from("${project.buildDir}/classes") {
        exclude '**/module-info.class'
        include '**/*.class'
    }
    into "${project.rootDir.absolutePath}/build/classes"
}
